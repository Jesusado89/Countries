{"ast":null,"code":"import {\n// FILTER_BY_COUNTRIES,\nFILTER_BY_ACTIVITIES, FILTER_BY_CONTINENT, GET_COUNTRIES, ORDER_BY_NAME, SEARCH_COUNTRIES, ASCENDENTE, POST_ACTIVITIES, GET_ACTIVITIES, ORDER_BY_POPULATION, HIGHER_POPULATION, DETAIL } from \"../const/Const\";\nconst initialState = {\n  countries: [],\n  allCountries: [],\n  activities: [],\n  detail: []\n};\nexport default function rootReducer() {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload\n      };\n    case FILTER_BY_CONTINENT:\n      const filtredCountriesByContinent = state.allCountries;\n      const continentFilteredBC = action.payload === \"All\" ? filtredCountriesByContinent : filtredCountriesByContinent.filter(el => el.continent === action.payload);\n      return {\n        ...state,\n        countries: continentFilteredBC\n      };\n    case FILTER_BY_ACTIVITIES:\n      const filtredCountriesByActivities = state.allCountries;\n      const continentFilteredBA = filtredCountriesByActivities.filter(c => {\n        return c.activities.find(c => {\n          return c.name === action.payload;\n        });\n      });\n\n      // case FILTER_BY_COUNTRIES:\n      // const filtredCountriesByActivities = state.allCountries.filter((c) => {\n      //     return c.name === action.payload;\n      //   });\n\n      if (action.payload === \"todos\") {\n        return {\n          ...state,\n          countries: filtredCountriesByActivities\n        };\n      } else {\n        return {\n          ...state,\n          countries: continentFilteredBA\n        };\n      }\n    case POST_ACTIVITIES:\n      return {\n        ...state\n        //activities: [...state.activities, action.payload]\n      };\n\n    case GET_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload\n      };\n    case DETAIL:\n      return {\n        ...state,\n        detail: action.payload\n      };\n    case SEARCH_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload\n      };\n    case ORDER_BY_NAME:\n      let orderCountriesByName = action.payload === ASCENDENTE ? state.countries.sort((a, b) => {\n        if (a.name < b.name) {\n          return -1;\n        }\n        if (a.name > b.name) {\n          return 1;\n        }\n        return 0;\n      }) : state.countries.sort((a, b) => {\n        if (a.name < b.name) {\n          return 1;\n        }\n        if (a.name > b.name) {\n          return -1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        countries: orderCountriesByName\n      };\n    case ORDER_BY_POPULATION:\n      let orderCountriesByPopulation = action.payload === HIGHER_POPULATION ? state.countries.sort((a, b) => {\n        if (a.population < b.population) {\n          return 1;\n        }\n        if (a.population > b.population) {\n          return -1;\n        }\n      }) : state.countries.sort((a, b) => {\n        if (a.population < b.population) {\n          return -1;\n        }\n        if (a.population > b.population) {\n          return 1;\n        }\n        return 0;\n      });\n      return {\n        ...state,\n        countries: orderCountriesByPopulation\n      };\n    default:\n      return state;\n  }\n}","map":{"version":3,"names":["FILTER_BY_ACTIVITIES","FILTER_BY_CONTINENT","GET_COUNTRIES","ORDER_BY_NAME","SEARCH_COUNTRIES","ASCENDENTE","POST_ACTIVITIES","GET_ACTIVITIES","ORDER_BY_POPULATION","HIGHER_POPULATION","DETAIL","initialState","countries","allCountries","activities","detail","rootReducer","state","action","type","payload","filtredCountriesByContinent","continentFilteredBC","filter","el","continent","filtredCountriesByActivities","continentFilteredBA","c","find","name","orderCountriesByName","sort","a","b","orderCountriesByPopulation","population"],"sources":["/home/jesus/Escritorio/PI-Terminado/PI-Countries-main-Jesus2/client/src/reducer/index.js"],"sourcesContent":["import {\n  // FILTER_BY_COUNTRIES,\n  FILTER_BY_ACTIVITIES,\n  FILTER_BY_CONTINENT,\n  GET_COUNTRIES,\n  ORDER_BY_NAME,\n  SEARCH_COUNTRIES,\n  ASCENDENTE,\n  POST_ACTIVITIES,\n  GET_ACTIVITIES,\n  ORDER_BY_POPULATION,\n  HIGHER_POPULATION,\n  DETAIL,\n} from \"../const/Const\";\n\nconst initialState = {\n  countries: [],\n  allCountries: [],\n  activities: [],\n  detail: [],\n};\n\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case GET_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload,\n        allCountries: action.payload,\n      };\n\n    case FILTER_BY_CONTINENT:\n      const filtredCountriesByContinent = state.allCountries;\n      const continentFilteredBC =\n        action.payload === \"All\"\n          ? filtredCountriesByContinent\n          : filtredCountriesByContinent.filter(\n              (el) => el.continent === action.payload\n            );\n      return {\n        ...state,\n        countries: continentFilteredBC,\n      };\n\n    case FILTER_BY_ACTIVITIES:\n      const filtredCountriesByActivities = state.allCountries;\n      const continentFilteredBA = filtredCountriesByActivities.filter((c) => {\n        return c.activities.find((c) => {\n          return c.name === action.payload;\n        });\n      });\n\n      // case FILTER_BY_COUNTRIES:\n      // const filtredCountriesByActivities = state.allCountries.filter((c) => {\n      //     return c.name === action.payload;\n      //   });\n\n      if (action.payload === \"todos\") {\n        return { ...state, countries: filtredCountriesByActivities };\n      } else {\n        return {\n          ...state,\n          countries: continentFilteredBA,\n        };\n      }\n\n    case POST_ACTIVITIES:\n      return {\n        ...state,\n        //activities: [...state.activities, action.payload]\n      };\n\n    case GET_ACTIVITIES:\n      return {\n        ...state,\n        activities: action.payload,\n      };\n\n    case DETAIL:\n      return {\n        ...state,\n        detail: action.payload,\n      };\n\n    case SEARCH_COUNTRIES:\n      return {\n        ...state,\n        countries: action.payload,\n      };\n\n    case ORDER_BY_NAME:\n      let orderCountriesByName =\n        action.payload === ASCENDENTE\n          ? state.countries.sort((a, b) => {\n              if (a.name < b.name) {\n                return -1;\n              }\n              if (a.name > b.name) {\n                return 1;\n              }\n              return 0;\n            })\n          : state.countries.sort((a, b) => {\n              if (a.name < b.name) {\n                return 1;\n              }\n              if (a.name > b.name) {\n                return -1;\n              }\n              return 0;\n            });\n\n      return {\n        ...state,\n        countries: orderCountriesByName,\n      };\n\n    case ORDER_BY_POPULATION:\n      let orderCountriesByPopulation =\n        action.payload === HIGHER_POPULATION\n          ? state.countries.sort((a, b) => {\n              if (a.population < b.population) {\n                return 1;\n              }\n              if (a.population > b.population) {\n                return -1;\n              }\n            })\n          : state.countries.sort((a, b) => {\n              if (a.population < b.population) {\n                return -1;\n              }\n              if (a.population > b.population) {\n                return 1;\n              }\n              return 0;\n            });\n\n      return {\n        ...state,\n        countries: orderCountriesByPopulation,\n      };\n\n    default:\n      return state;\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}